  -- Exploratory Data Analysis --
-- creating database as name playstore_project
CREATE DATABASE PlayStore_Project;
-- select database by use command
use PlayStore_project;
show tables;
drop table playstore_apps_cleaned;

-- table creation with specify field value and name
CREATE TABLE apps (
    Id INT,
    App VARCHAR(255),
    Category VARCHAR(100),
    Rating DECIMAL(4,2),
    Reviews INT,
    Size VARCHAR(50),
    Installs INT,
    `Type` VARCHAR(10),
    Price DECIMAL(6,3),
    Content_Rating VARCHAR(100),
    Genres VARCHAR(255),
    Last_Updated DATE,
    Current_Ver VARCHAR(255),
    Android_Ver VARCHAR(255)
);
-- check the secure path directly 
SHOW VARIABLES LIKE 'secure_file_priv';
-- data load from csv file to table app
LOAD DATA INFILE "C:/New folder/Uploads/playStore_apps_cleaned.csv"
INTO TABLE apps
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(Id, App, Category, Rating, Reviews, Size, Installs, `Type`, Price, Content_Rating, Genres, Last_Updated, Current_Ver, Android_Ver);
-- review the table 
select count(*) from apps; -- check number of row for validate import operation

-- 1. Which apps have the highest rating in the given available dataset?
SELECT 
	app, 
    rating
FROM (  -- sub query 
	SELECT 
		*,
		DENSE_RANK() OVER(ORDER BY rating DESC) AS rating_rank
	FROM 
		apps) AS test
WHERE 
	rating_rank = 1;
-- 2. What are the number of installs and reviews for the above apps? Return the apps with the highest reviews to the top.
SELECT app,
       Installs,
       rating,
       Reviews
        -- sub query 
        
	FROM (SELECT 
		*,
		DENSE_RANK() OVER(ORDER BY rating DESC) AS rating_rank
	FROM 
		apps) AS test
WHERE 
	rating_rank = 1
        order by 4 DESC;

-- 3. Which app has the highest number of reviews? Also, mention the number of reviews and category of the app.

SELECT app,
       category,
       reviews 
       from apps
       order by 3 DESC limit 1;  
       
/* 4. What is the total amount of revenue generated by the google play store by hosting apps? (Whenever a user buys apps from the google play store, 
the amount is considered in the revenue) */

Select SUM(Price)
 from apps 
 where `type` ="Paid"; 

/* 5. Which Category of google play store apps has the highest number of installs? 
also, find out the total number of installs for that particular category. */



SELECT 
	sum(installs) as installs, category
FROM 
	apps
GROUP BY category
order by installs DESC
limit 10;

-- 6. Which Genre has the most number of published apps?

SELECT COUNT(App) as `Number of Apps ` ,
 genres From apps
 group by genres 
 order by 1 DESC
 limit 1;
 
 /* 7. Provide the list of all games ordered in such a way that the game that has the highest number of installs is displayed on the top
(to avoid duplicate results use distinct). */

SELECT 
	DISTINCT(app), 
    installs
FROM 
	apps
WHERE 
	category = 'GAME'
ORDER BY 2 DESC;

-- 8. Provide the list of apps that can work on android version 4.0.3 and UP.
select app 
from apps 
where Android_ver like '%4.0.3 and up%';

-- 9. How many apps from the given data set are free? Also, provide the number of paid apps

select type, count(*) from  apps 
group by 1
limit 2;

-- 10. Which is the best dating app? (Best dating app is the one having the highest number of Reviews)

SELECT 
	app, 
    category,
    reviews
FROM 
	apps
WHERE 
	category = 'Dating'
ORDER BY reviews DESC
LIMIT 1;

CREATE TABLE reviews (
    id int,
	App	TEXT,
    Translated_Review TEXT,
    Sentiment VARCHAR(25),
    Sentiment_Polarity DECIMAL(20,15),
    Sentiment_Subjectivity DECIMAL(20,15)
);
drop table reviews;


LOAD DATA INFILE "C:/New folder/Uploads/playStore_review_cleaned.csv"
INTO TABLE Reviews
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(Id, App, Translated_Review, Sentiment, Sentiment_Polarity,@Sentiment_Subjectivity)
SET Sentiment_Subjectivity = NULLIF(@Sentiment_Subjectivity, '');
select count(*) from reviews; -- No. of row matched 

/* 11. Get the number of reviews having positive sentiment and number of reviews having negative sentiment for the app 10 best foods for you  
and compare them. */
select * from reviews;
SELECT
	sentiment,
    COUNT(*) AS no_of_sentiments
FROM
	reviews
WHERE 
	app = '10 Best Foods for You' AND sentiment IN ('Positive', 'negative')
GROUP BY 1;

/* 12. Which comments of ASUS SuperNote have sentiment polarity and sentiment subjectivity both as 1? */

Select * from reviews 
where app= "ASUS SuperNote" 
and Sentiment_polarity=1 and
 Sentiment_Subjectivity=1;
 
 -- 13. Get all the neutral sentiment reviews for the app Abs Training-Burn belly fat.
 
 Select * from reviews 
 where app="Abs Training-Burn belly fat" 
 and Sentiment="neutral";
 
 -- 14. Extract all negative sentiment reviews for Adobe Acrobat Reader with their sentiment polarity and sentiment subjectivity.
 
 Select * from Reviews 
 where app ="Adobe Acrobat Reader" 
 and sentiment="negative";
 
                    -- Exploratory Data analysis End --
